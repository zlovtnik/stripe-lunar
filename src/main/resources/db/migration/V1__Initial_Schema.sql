-- Initial database schema for Stripe-Lunar ETL application

-- Create Stripe Customers table
CREATE TABLE STRIPE_CUSTOMERS (
    CUSTOMER_ID VARCHAR2(50) PRIMARY KEY,
    EMAIL VARCHAR2(255),
    NAME VARCHAR2(255),
    DESCRIPTION VARCHAR2(1000),
    CREATED_DATE TIMESTAMP,
    UPDATED_DATE TIMESTAMP,
    METADATA VARCHAR2(4000),
    DELETED NUMBER(1) DEFAULT 0
);

-- Create index on email for faster lookups
CREATE INDEX IDX_CUSTOMER_EMAIL ON STRIPE_CUSTOMERS(EMAIL);

-- Create Stripe Payments table
CREATE TABLE STRIPE_PAYMENTS (
    PAYMENT_ID VARCHAR2(50) PRIMARY KEY,
    CUSTOMER_ID VARCHAR2(50),
    AMOUNT NUMBER(19,4),
    CURRENCY VARCHAR2(3),
    STATUS VARCHAR2(50),
    DESCRIPTION VARCHAR2(1000),
    CREATED_DATE TIMESTAMP,
    UPDATED_DATE TIMESTAMP,
    METADATA VARCHAR2(4000),
    CONSTRAINT FK_PAYMENT_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES STRIPE_CUSTOMERS(CUSTOMER_ID)
);

-- Create index on customer_id for faster lookups
CREATE INDEX IDX_PAYMENT_CUSTOMER ON STRIPE_PAYMENTS(CUSTOMER_ID);

-- Create ETL Job History table to track ETL job executions
CREATE TABLE ETL_JOB_HISTORY (
    JOB_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    JOB_NAME VARCHAR2(100) NOT NULL,
    START_TIME TIMESTAMP NOT NULL,
    END_TIME TIMESTAMP,
    STATUS VARCHAR2(20) NOT NULL,
    RECORDS_PROCESSED NUMBER,
    ERROR_MESSAGE VARCHAR2(4000)
);

-- Create index on job_name and start_time for faster lookups
CREATE INDEX IDX_JOB_NAME_START_TIME ON ETL_JOB_HISTORY(JOB_NAME, START_TIME);

-- Create sequence for ETL job IDs
CREATE SEQUENCE SEQ_ETL_JOB_ID
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
